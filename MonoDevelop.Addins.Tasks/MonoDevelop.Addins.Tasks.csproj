<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{AC367EC2-202F-4FB4-A461-5B95827C5DFF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>MonoDevelop.Addins.Tasks</RootNamespace>
    <AssemblyName>MonoDevelop.Addins.Tasks</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <Title>MonoDevelop Addins Build Support</Title>
    <PackageId>MonoDevelop.Addins</PackageId>
    <PackageVersion>0.3.14</PackageVersion>
    <Authors>Mikayla Hutchinson</Authors>
    <PackageLicenseUrl>http://opensource.org/licenses/MIT</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/mhutch/MonoDevelop.AddinMaker</PackageProjectUrl>
    <Description>MSBuild targets for building Visual Studio for Mac / Xamarin Studio / MonoDevelop addins.</Description>
    <PackageReleaseNotes>Improved support for VS for Mac. Fixed issue referencing addins build on other platforms.</PackageReleaseNotes>
    <PrimaryOutputPackageFileKind>Build</PrimaryOutputPackageFileKind>
    <!-- work around Nugetizer adding build refs to the project -->
    <IncludeFrameworkReferencesInPackage>false</IncludeFrameworkReferencesInPackage>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="Microsoft.Build.Utilities.v4.0" />
    <Reference Include="Microsoft.Build.Framework" />
    <Reference Include="Microsoft.Build.Tasks.v4.0" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Xml" />
    <PackageReference Include="Mono.Addins" Version="1.3.4" PrivateAssets="all" />
    <PackageReference Include="Mono.Addins.Setup" Version="1.3.4" PrivateAssets="all"/>
    <PackageReference Include="NuGet.Build.Packaging" Version="0.1.248" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Platform.cs" />
    <Compile Include="GetDefaultMonoDevelopLocations.cs" />
    <Compile Include="ResolveMonoDevelopAddins.cs" />
    <Compile Include="CreatePackage.cs" />
    <Compile Include="AddinTask.cs" />
    <Compile Include="LogProgressStatus.cs" />
    <Compile Include="CollectOutputFiles.cs" />
    <Compile Include="GenerateManifest.cs" />
    <Compile Include="GetMonoDevelopTargetFramework.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="MonoDevelop.Addins.targets" CopyToOutputDirectory="PreserveNewest" />
    <None Include="MonoDevelop.Addins.props" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <Target Name="AddBuiltOutput" BeforeTargets="GetPackageContents" DependsOnTargets="AllProjectOutputGroups" Returns="@(PackageFile)">
    <ItemGroup>
      <!-- work around NuGetizer not including private assets from dependencies --> 
      <PackageFile Include="$(OutputPath)ICSharpCode.SharpZipLib.dll" PackagePath="build\net45\ICSharpCode.SharpZipLib.dll" />
      <PackageFile Include="$(OutputPath)Mono.Addins.dll" PackagePath="build\net45\Mono.Addins.dll" />
      <PackageFile Include="$(OutputPath)Mono.Addins.Setup.dll" PackagePath="build\net45\Mono.Addins.Setup.dll" />
      <!-- work around nugetizer not including local copy files -->
      <PackageFile Include="@(None)" Condition="%(None.CopyToOutputDirectory)=='PreserveNewest'" PackagePath="build\net45\%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
</Project>
